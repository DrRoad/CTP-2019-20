//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeepLearningLanding.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DeepLearningLanding.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import os, random, sys
        ///import numpy as np
        ///import cv2
        ///from dutil import *
        ///
        ///NUM_IMAGES = 1000
        ///SAMPLES_PER_IMG = 10
        ///DOTS_PER_IMG = 60
        ///IMAGE_W = 144
        ///IMAGE_H = 192
        ///IMAGE_DIR = &apos;../Builds/StreetviewRipper/Output/Images/PulledClouds/BestMatch/&apos;
        ///NUM_SAMPLES = NUM_IMAGES * 2 * SAMPLES_PER_IMG
        ///NUM_CHANNELS = 3
        ///
        ///def center_resize(img):
        ///    assert(IMAGE_W == IMAGE_H)
        ///    w, h = img.shape[0], img.shape[1]
        ///    if w &gt; h:
        ///        x = (w-h)/2
        ///        img = img[x:x+h,:]
        ///    elif h &gt; w:
        ///        img = img[ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string datagen {
            get {
                return ResourceManager.GetString("datagen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [global]
        ///floatX=float32
        ///device=cuda
        ///
        ///[nvcc]
        ///compiler_bindir=%%VC_DIR%%
        ///
        ///[dnn]
        ///enabled=True
        ///include_path=%%CUDA_DIR%%\include
        ///library_path=%%CUDA_DIR%%\lib\x64
        ///.
        /// </summary>
        internal static string gpu {
            get {
                return ResourceManager.GetString("gpu", resourceCulture);
            }
        }
    }
}
